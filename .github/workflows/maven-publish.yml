# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: lib-logbit-package

on:
 push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: central # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Test with Maven
      run: mvn test --file pom.xml

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish package
      run: |
        gpg --batch --gen-key gen-key-script
        uid=$(gpg --list-secret-keys --with-colons | awk -F: '$1 == "sec" {print $5}')
        gpg --keyserver keyserver.ubuntu.com --send-keys $uid
        echo "waiting..."
        sleep 60
        echo "waiting finish!"
        gpg --keyserver keyserver.ubuntu.com --recv-keys $uid
        mvn deploy -s $GITHUB_WORKSPACE/settings.xml -DpomFile=pom.xml
        gpg --delete-secret-key $id
        gpg --delete-key $id
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}